{"version":3,"sources":["Pager.js","ListItem.js","SearchResultList.js","SimpleModal.js","Sorter.js","App.js","index.js"],"names":["Pager","props","onChange","currentPage","count","total","pageSize","current","showSizeChanger","selectedPage","hideOnSinglePage","showQuickJumper","showLessItems","ListItem","user","Item","Meta","avatar","src","avatar_url","title","href","html_url","login","description","SearchResultList","list","itemLayout","dataSource","renderItem","SimpleModal","onShow","onClose","text","className","style","backgroundColor","onClick","margin","borderRadius","Sorter","Group","defaultValue","buttonStyle","e","target","value","Button","Search","Input","App","octokit","Octokit","useState","searchQuery","setSearchQuery","showModal","setShowModal","textmodal","setTextModal","setList","setCount","setCurrentPage","url","setUrls","sortOption","setSortOption","useEffect","getSearchResult","a","request","q","p","page","per_page","sort","then","res","data","items","total_count","replace","catch","err","console","error","placeholder","allowClear","enterButton","size","onSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2a9161.chunk.js","sourcesContent":["import React from 'react'\nimport { Pagination } from 'antd'\n\nconst Pager = (props) => {\n  const { onChange, currentPage, count } = props\n\n  if (!count) return null\n\n  return (\n    <Pagination\n      total={count > 1000 ? 1000 : count}\n      pageSize={10}\n      current={currentPage}\n      showSizeChanger={false}\n      onChange={(selectedPage) => onChange(selectedPage)}\n      hideOnSinglePage={true}\n      showQuickJumper\n      showLessItems\n    />\n  )\n}\n\nexport default Pager\n","import React from 'react';\nimport { List, Avatar } from 'antd';\n\nconst ListItem = ({user}) => {\n\n  return (\n    <List.Item>\n      <List.Item.Meta\n        avatar={<Avatar src={user.avatar_url} />}\n        title={<a href={user.html_url}>{user.login}</a>}\n        description=\"\"\n      />\n    </List.Item>\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { List } from 'antd';\nimport ListItem from './ListItem'\n\nconst SearchResultList = (props) => {\nconst {list} = props\n\n  return (\n    <List\n      itemLayout=\"horizontal\"\n      dataSource={list}\n      renderItem={user => (\n        <ListItem user={user}/>\n      )}\n    />\n  );\n};\n\nexport default SearchResultList;\n","import React from 'react'\nimport { Row } from 'antd'\n\nconst SimpleModal = ({ onShow, onClose, text }) => {\n\n  return (\n    onShow &&\n    <div\n      className=\"modal-backdrop\"\n      style={{ backgroundColor: '#00000094' }}\n      onClick={() => onClose(false)}\n    >\n      <div\n        className=\"modal-body bg-white w-25\"\n        style={{\n          margin: '20vh auto',\n          borderRadius: '5px'\n        }}\n      >\n        <Row className=\"justify-content-end\">\n          <p className=\"modal-close-x btn btn-sm\">X</p>\n        </Row>\n        <div className=\"modal-dialog text-center\">\n          {text}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SimpleModal\n","import React from 'react'\nimport { Radio, Row } from 'antd'\n\nconst Sorter = ({ onChange }) => {\n\n  return (\n    <Row className=\"mt-3\">\n      <div className=\"p-1 mr-2\">Sort By:</div>\n      <Radio.Group\n        defaultValue=\"\"\n        buttonStyle=\"solid\"\n        onChange={(e) => onChange(e.target.value)}\n      >\n        <Radio.Button value=\"followers\">Followers</Radio.Button>\n        <Radio.Button value=\"repositories\">Repositories</Radio.Button>\n        <Radio.Button value=\"joined\">Joined</Radio.Button>\n      </Radio.Group>\n    </Row>\n  )\n}\n\nexport default Sorter\n","import './App.css'\nimport React, { useEffect, useState } from 'react'\nimport Pager from './Pager'\nimport 'antd/dist/antd.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Octokit } from '@octokit/core'\nimport { Input, Button } from 'antd'\nimport SearchResultList from './SearchResultList'\nimport SimpleModal from './SimpleModal'\nimport Sorter from './Sorter'\n\nconst { Search } = Input\n\nfunction App () {\n  const octokit = new Octokit()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const [textmodal, setTextModal] = useState('')\n  const [list, setList] = useState([])\n  const [count, setCount] = useState(null)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [url, setUrls] = useState('https://github.com/search?type=users')\n  const [sortOption, setSortOption] = useState('')\n\n  useEffect(() => {\n    searchQuery && getSearchResult()\n  }, [sortOption, currentPage])\n\n  const getSearchResult = async () => {\n    await octokit.request('GET /search/users', {\n      q: searchQuery,\n      p: currentPage,\n      page: currentPage,\n      per_page: 10,\n      sort: sortOption\n    })\n    .then((res) => {\n      setList(res.data.items)\n      setCount(res.data.total_count)\n      setUrls(res.url.replace('api.github.com/search/users?', 'github.com/search?type=users&'))\n    })\n    .catch((err) => {\n      setShowModal(true)\n      setTextModal(`${err}`)\n      console.error(err)\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <Search\n        placeholder=\"enter github user name\"\n        allowClear\n        enterButton=\"Search\"\n        size=\"large\"\n        onSearch={getSearchResult}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        className=\"mt-3 text-left\"\n      />\n      <Sorter onChange={setSortOption}/>\n      <Button href={url} className=\"mt-3 mb-3\">Open on GitHub: {url}</Button>\n      <SearchResultList list={list} className=\"mb-3\"/>\n      <Pager\n        currentPage={currentPage}\n        count={count}\n        onChange={setCurrentPage}\n      />\n      {count && <div className=\"mt-3\">Total matches: {count}</div>}\n      <SimpleModal onShow={showModal} onClose={setShowModal} text={textmodal}/>\n    </div>\n  )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}